{"version":3,"file":"static/js/157.4b5803ec.chunk.js","mappings":"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","sources":["components/NotificationDoc/NotificationDoc.js","components/PackageInfo/PackageInfo.js","pages/PackInfo/PackInfo.js","services/apiService.js","utils/settingAlert.js","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { Typography } from '@mui/material';\nimport { Box } from '@mui/system';\n\nconst NotificationDoc = ({ title = ' Внесіть коректний номер ТТН' }) => {\n  return (\n    <Box\n      sx={{\n        p: 2,\n      }}\n    >\n      <Typography sx={{ fontSize: '20px', color: 'grey' }}>{title}</Typography>\n    </Box>\n  );\n};\n\nexport default NotificationDoc;\n","import { Box, Typography } from '@mui/material';\nimport Loader from 'components/Loader/Loader';\nimport NotificationDoc from 'components/NotificationDoc/NotificationDoc';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchPackageDetails } from 'services/apiService';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { settingAlert } from 'utils/settingAlert';\n\nconst PackageInfo = () => {\n  const [packInfo, setPackInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { ttn } = useParams();\n\n  const getPackageDetails = async ttn => {\n    setIsLoading(true);\n    try {\n      const resp = await fetchPackageDetails(ttn);\n      if (!resp.success) {\n        toast.error('Document number is not correct!', settingAlert());\n        return;\n      }\n      if (resp.data[0].StatusCode === '3') {\n        toast.warning('Documents number not found!', settingAlert());\n        return;\n      }\n      setPackInfo(resp.data[0]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setPackInfo(null);\n    getPackageDetails(ttn);\n  }, [ttn]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : packInfo ? (\n        <Box sx={{ p: 3 }}>\n          <Typography sx={{ fontSize: 20, mb: 2 }}>\n            <b>Статус:</b> {packInfo.Status}\n          </Typography>\n          <Typography sx={{ fontSize: 20, mb: 2 }}>\n            <b>Запланований час доставки:</b> {packInfo.ScheduledDeliveryDate}\n          </Typography>\n          <Typography sx={{ fontSize: 20 }}>\n            <b>Відправлено:</b>\n          </Typography>\n          <Typography sx={{ fontSize: 20, mb: 2 }}>\n            {packInfo.WarehouseSender}\n          </Typography>\n          <Typography sx={{ fontSize: 20 }}>\n            <b>Отримано:</b>\n          </Typography>\n          <Typography sx={{ fontSize: 20, mb: 2 }}>\n            {packInfo.WarehouseRecipientAddress}\n          </Typography>\n        </Box>\n      ) : (\n        <NotificationDoc />\n      )}\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default PackageInfo;\n","import PackageInfo from 'components/PackageInfo/PackageInfo';\nimport React from 'react';\n\nconst PackInfo = () => {\n  return (\n    <>\n      <PackageInfo />\n    </>\n  );\n};\n\nexport default PackInfo;\n","import axios from 'axios';\nimport { KEY_API, NP_URL } from '../utils/constants';\n\nexport async function fetchPackageDetails(ttn_number) {\n  try {\n    const response = await axios.post(NP_URL, {\n      apiKey: KEY_API,\n      modelName: 'TrackingDocument',\n      calledMethod: 'getStatusDocuments',\n      methodProperties: {\n        Documents: [\n          {\n            DocumentNumber: ttn_number,\n            Phone: '380600000000',\n          },\n        ],\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchDepartamentsList(city_name) {\n  try {\n    const { data } = await axios.post(NP_URL, {\n      apiKey: KEY_API,\n      modelName: 'Address',\n      calledMethod: 'getWarehouses',\n      methodProperties: {\n        CityName: city_name,\n\n        Page: '1',\n        Limit: '50',\n        Language: 'UA',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","export const settingAlert = (timer = 1500) => {\n  return {\n    position: 'top-right',\n    autoClose: timer,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  };\n};\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["title","sx","p","fontSize","color","useState","packInfo","setPackInfo","isLoading","setIsLoading","ttn","useParams","getPackageDetails","fetchPackageDetails","resp","success","toast","settingAlert","data","StatusCode","console","log","useEffect","Loader","Box","Typography","mb","Status","ScheduledDeliveryDate","WarehouseSender","WarehouseRecipientAddress","NotificationDoc","ttn_number","axios","NP_URL","apiKey","KEY_API","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","response","error","fetchDepartamentsList","city_name","CityName","Page","Limit","Language","timer","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","createBox"],"sourceRoot":""}