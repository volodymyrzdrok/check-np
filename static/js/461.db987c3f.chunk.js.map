{"version":3,"file":"static/js/461.db987c3f.chunk.js","mappings":"kPAoDA,EA9CwB,WACtB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,IAERC,iBAAkBC,EAAAA,EAClBC,SAAS,WAAD,wBAAE,gGAASH,EAAT,EAASA,KAAT,mBAEiBI,EAAAA,EAAAA,GAAsBJ,GAFvC,gBAEEK,EAFF,EAEEA,KACRT,EAAWS,GAHL,gDAKNC,QAAQC,IAAR,MALM,yDAAF,mDAAC,KAUHC,EAAoBX,EAApBW,OAAQC,EAAYZ,EAAZY,QAChB,OACE,4BACE,kBAAMN,SAAUN,EAAOa,aAAvB,WACE,cAAGC,MAAO,CAAEC,MAAO,OAAnB,SACGJ,EAAOR,MAAQS,EAAQT,KAAOQ,EAAOR,KAAO,QAE/C,kBACEa,YAAY,SACZC,KAAK,OACLC,MAAOlB,EAAOmB,OAAOhB,KACrBiB,SAAUpB,EAAOqB,gBAEnB,mBAAQC,KAAK,SAAb,yBAEF,wBACGxB,EAAQyB,OAAS,EAChBzB,EAAQ0B,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAZ,OACV,8BAAoBA,IAAXD,EADC,KAIZ,2TAKT,ECvCD,EARmB,WACjB,OACE,+BACE,SAAC,EAAD,KAGL,C,mICNM,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,gGAEoBC,EAAAA,EAAAA,KAAWC,EAAAA,GAAQ,CACxCC,OAAQC,EAAAA,GACRC,UAAW,mBACXC,aAAc,qBACdC,iBAAkB,CAChBC,UAAW,CACT,CACEC,eAAgBT,EAChBU,MAAO,oBAVZ,cAEGC,EAFH,yBAeIA,EAAS/B,MAfb,gCAiBHC,QAAQ+B,MAAR,MAjBG,gFAqBA,SAAejC,EAAtB,+CAAO,OAAP,oBAAO,WAAqCkC,GAArC,kGAEoBZ,EAAAA,EAAAA,KAAWC,EAAAA,GAAQ,CACxCC,OAAQC,EAAAA,GACRC,UAAW,UACXC,aAAc,gBACdC,iBAAkB,CAChBO,SAAUD,EAEVE,KAAM,IACNC,MAAO,KACPC,SAAU,QAXX,uBAEKrC,EAFL,EAEKA,KAFL,kBAcIA,GAdJ,gCAgBHC,QAAQ+B,MAAR,MAhBG,gF,4FCtBMM,EAAgBC,EAAAA,KAAaC,MAAM,CAC9CC,OAAQF,EAAAA,KACLxB,OAAO,GAAI,sBACX2B,QAAQ,oDAGA7C,EAAgB0C,EAAAA,KAAaC,MAAM,CAC9C7C,KAAM4C,EAAAA,KAEHG,QAAQ,8BAAW,yBACnBC,SAAS,a","sources":["components/DepartmentsList/DepartmentsList.js","pages/DepartList/DepartList.js","services/apiService.js","utils/validations.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { fetchDepartamentsList } from 'services/apiService';\n\nimport { useFormik } from 'formik';\nimport { nameCityShema } from 'utils/validations';\n\nconst DepartmentsList = () => {\n  const [depList, setDepList] = useState([]);\n\n  const formik = useFormik({\n    initialValues: {\n      city: '',\n    },\n    validationSchema: nameCityShema,\n    onSubmit: async ({ city }) => {\n      try {\n        const { data } = await fetchDepartamentsList(city);\n        setDepList(data);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  });\n\n  const { errors, touched } = formik;\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <p style={{ color: 'red' }}>\n          {errors.city && touched.city ? errors.city : null}\n        </p>\n        <input\n          placeholder=\"city :\"\n          name=\"city\"\n          value={formik.values.city}\n          onChange={formik.handleChange}\n        />\n        <button type=\"submit\">search </button>\n      </form>\n      <ul>\n        {depList.length > 0 ? (\n          depList.map(({ SiteKey, Description }) => (\n            <li key={SiteKey}> {Description}</li>\n          ))\n        ) : (\n          <p>Не знайдено віддільнь, напишіть назву міста кирилицею</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default DepartmentsList;\n","import DepartmentsList from 'components/DepartmentsList/DepartmentsList';\nimport React from 'react';\n\nconst DepartList = () => {\n  return (\n    <>\n      <DepartmentsList />\n    </>\n  );\n};\n\nexport default DepartList;\n","import axios from 'axios';\nimport { KEY_API, NP_URL } from '../utils/constants';\n\nexport async function fetchPackageDetails(ttn_number) {\n  try {\n    const response = await axios.post(NP_URL, {\n      apiKey: KEY_API,\n      modelName: 'TrackingDocument',\n      calledMethod: 'getStatusDocuments',\n      methodProperties: {\n        Documents: [\n          {\n            DocumentNumber: ttn_number,\n            Phone: '380600000000',\n          },\n        ],\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchDepartamentsList(city_name) {\n  try {\n    const { data } = await axios.post(NP_URL, {\n      apiKey: KEY_API,\n      modelName: 'Address',\n      calledMethod: 'getWarehouses',\n      methodProperties: {\n        CityName: city_name,\n\n        Page: '1',\n        Limit: '50',\n        Language: 'UA',\n      },\n    });\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import * as Yup from 'yup';\n\nexport const ttnCheckShema = Yup.object().shape({\n  number: Yup.string()\n    .length(14, 'must be 14 numbers')\n    .matches(/^([0]([.][0-9]+)?|[1-9]([0-9]+)?([.][0-9]+)?)$/),\n});\n\nexport const nameCityShema = Yup.object().shape({\n  city: Yup.string()\n\n    .matches(/[А-яЁё]/, 'only curilic letters!')\n    .required('Required'),\n});\n"],"names":["useState","depList","setDepList","formik","useFormik","initialValues","city","validationSchema","nameCityShema","onSubmit","fetchDepartamentsList","data","console","log","errors","touched","handleSubmit","style","color","placeholder","name","value","values","onChange","handleChange","type","length","map","SiteKey","Description","fetchPackageDetails","ttn_number","axios","NP_URL","apiKey","KEY_API","modelName","calledMethod","methodProperties","Documents","DocumentNumber","Phone","response","error","city_name","CityName","Page","Limit","Language","ttnCheckShema","Yup","shape","number","matches","required"],"sourceRoot":""}